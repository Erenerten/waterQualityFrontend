---
import type { SensorType } from '../scripts/types';

const sensors: SensorType[] = ['temperature', 'turbidity', 'tds', 'flow-comparison'];
const currentPath = Astro.url.pathname;

const menuItems = [
  { href: '/dashboard', text: 'Panel', icon: 'chart-line' },
  { href: '/dashboard/reports', text: 'Raporlar', icon: 'file-alt' },
  { href: '/dashboard/settings', text: 'Ayarlar', icon: 'cog' },
  { href: '/', text: 'Ana Sayfa', icon: 'home' }
];
---

<aside class="sidebar">
  <div class="logo">
    <img src="/images/logo.png" alt="logo">
    <span>AEA</span>
  </div>

  <!-- Sensor boxes -->
  {sensors.map(type => (
    <div class={`sensor-box ${type === 'temperature' ? 'active' : ''}`} data-sensor={type}>
      <div class="sensor-header">
        <h4>{type === 'temperature' ? 'Su Sıcaklığı' : 
            type === 'turbidity' ? 'Bulanıklık' :
            type === 'tds' ? 'TDS / İletkenlik' : 
            'Akış Karşılaştırma'}</h4>
        <span class="sensor-status" id={`stat-${type}`}>—</span>
      </div>
      <div class="sensor-value" id={`val-${type}`}>-- <span class="sensor-unit">
        {type === 'temperature' ? '°C' :
         type === 'turbidity' ? 'NTU' :
         type === 'tds' ? 'ppm' : 
         'm³/s'}</span>
      </div>
      <div class="sensor-time" id={`time-${type}`}>30 dakika ortalaması</div>
    </div>
  ))}

  <!-- Navigation -->
  <nav class="nav-menu">
    {menuItems.map(item => (
      <a 
        href={item.href}
        class:list={['nav-item', { active: currentPath === item.href }]}
      >
        <i class={`fas fa-${item.icon}`}></i>
        <span>{item.text}</span>
      </a>
    ))}
  </nav>
</aside>

<style>
.sidebar {
  width: 250px;
  background: var(--dark);
  color: #fff;
  padding: 20px 16px;
  display: flex;
  flex-direction: column;
  gap: 18px;
}

.logo {
  display: flex;
  align-items: center;
  font-weight: 600;
  font-size: 1.3rem;
}

.logo img {
  height: 52px;
  margin-right: 10px;
}

.sensor-box {
  background: rgba(255,255,255,.08);
  padding: 14px;
  border-radius: 10px;
  border-left: 3px solid var(--accent);
  cursor: pointer;
  transition: .2s;
}

.sensor-box:hover {
  background: rgba(255,255,255,.12);
}

.sensor-box.active {
  border-left-color: #fff;
}

.sensor-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 6px;
}

.sensor-header h4 {
  font-size: .85rem;
  font-weight: 500;
  font-family: 'Poppins', sans-serif;
}

.sensor-status {
  font-size: .65rem;
  padding: 2px 6px;
  border-radius: 14px;
  background: var(--success);
}

.sensor-status.warning {
  background: var(--warning);
}

.sensor-status.danger {
  background: var(--danger);
}

.sensor-value {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 4px 0;
}

.sensor-unit {
  font-size: .75rem;
  opacity: .8;
}

.sensor-time {
  font-size: .7rem;
  opacity: .7;
  margin-top: 4px;
}

.nav-menu {
  margin-top: auto;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.nav-item {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 10px;
  color: rgba(255,255,255,.8);
  text-decoration: none;
  border-radius: 8px;
  transition: .2s;
}

.nav-item:hover {
  background: rgba(255,255,255,.1);
  color: #fff;
}

.nav-item.active {
  background: var(--accent);
  color: #fff;
}

.nav-item i {
  width: 20px;
  text-align: center;
}

@media (max-width: 768px) {
  .sidebar {
    width: 100%;
    padding: 12px;
  }
  
  .nav-menu {
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
  }
  
  .nav-item {
    flex: 1;
    min-width: 120px;
    justify-content: center;
  }
}
</style>
